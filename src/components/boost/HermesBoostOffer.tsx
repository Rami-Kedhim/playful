
/**
 * HermesBoostOffer - Displays boost offers generated by HERMES
 */
import { useState, useEffect } from 'react';
import { useAuth } from '@/hooks/useAuth';
import { useHermesInsights } from '@/hooks/useHermesInsights';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';
import { Zap, Clock, X } from 'lucide-react';
import { toast } from '@/components/ui/use-toast';

interface HermesBoostOfferProps {
  onAccept?: () => void;
  onDismiss?: () => void;
}

const HermesBoostOffer = ({ onAccept, onDismiss }: HermesBoostOfferProps) => {
  const { user } = useAuth();
  const { insights, recordBoostRequest } = useHermesInsights(user?.id);
  const [isVisible, setIsVisible] = useState(false);
  
  // Show offer when available from HERMES
  useEffect(() => {
    if (insights.boostOffer) {
      setIsVisible(true);
    }
  }, [insights.boostOffer]);
  
  // If no offer or dismissed, don't render
  if (!isVisible || !insights.boostOffer) {
    return null;
  }
  
  const handleAccept = () => {
    // Record acceptance in HERMES
    recordBoostRequest();
    
    toast({
      title: "Boost Offer Applied!",
      description: `Your ${insights.boostOffer?.value} discount has been applied.`,
    });
    
    setIsVisible(false);
    if (onAccept) onAccept();
  };
  
  const handleDismiss = () => {
    setIsVisible(false);
    if (onDismiss) onDismiss();
  };
  
  return (
    <Card className="fixed bottom-24 right-6 w-80 bg-gradient-to-tr from-primary/90 to-primary-foreground/90 text-white shadow-xl z-40 animate-in slide-in-from-bottom-5">
      <CardHeader className="pb-2 pt-4">
        <div className="flex items-center justify-between">
          <CardTitle className="text-white flex items-center">
            <Zap className="w-5 h-5 mr-2" />
            Special Boost Offer
          </CardTitle>
          <button onClick={handleDismiss} className="text-white/70 hover:text-white">
            <X className="h-4 w-4" />
          </button>
        </div>
      </CardHeader>
      <CardContent className="pb-3">
        <p className="text-lg font-bold">
          {insights.boostOffer.value} Discount
        </p>
        <div className="flex items-center mt-1 text-xs text-white/80">
          <Clock className="h-3 w-3 mr-1" />
          <span>Expires in {insights.boostOffer.expires}</span>
        </div>
      </CardContent>
      <CardFooter>
        <Button 
          onClick={handleAccept} 
          variant="secondary" 
          size="sm" 
          className="w-full bg-white text-primary hover:bg-white/90"
        >
          <Zap className="h-4 w-4 mr-2" />
          Claim Offer
        </Button>
      </CardFooter>
    </Card>
  );
};

export default HermesBoostOffer;
